
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CIN COMMA COUT DEQUAL DISTINT DIVIDE ELSE ENDL EQUAL FOR GREATEREQUAL GREATER_THAN HASH ID IF INCLUDE INT LBLOCK LBRACKET LESS_OR_EQUAL LESS_THAN LPAREN L_SHIFT MINUS MINUSMINUS NAMESPACE NUMBER PLUS PLUSPLUS QUOTES RBLOCK RBRACKET RETURN RPAREN R_SHIFT SEMICOLON STD STRING TIMES USING VOID WHILEprogram : declaration_listvar_declaration : type_specifier ID SEMICOLON\n    | type_specifier ID EQUAL NUMBER SEMICOLON\n    | type_specifier ID EQUAL var SEMICOLON\n    | type_specifier ID COMMA ID SEMICOLON\n    var_declaration : type_specifier ID LBRACKET NUMBER RBRACKET SEMICOLONfun_declaration : type_specifier ID LPAREN params RPAREN compount_stmtparams : param_listparams : VOIDparam_list : param_list COMMA paramparam_list : paramparam_list : emptytype_specifier : INTtype_specifier : VOIDtype_specifier : STRINGparam : type_specifier IDparam : type_specifier ID LBRACKET RBRACKETcompount_stmt : LBLOCK local_declarations statement_list RBLOCKlocal_declarations : local_declarations var_declarationlocal_declarations : emptystatement_list : statement_list statementstatement_list : emptystatement : expression_stmt\n            | compount_stmt\n            | selection_stmt\n            | iteration_stmt\n            | return_stmt\n    expression_stmt : expression SEMICOLONexpression_stmt : SEMICOLONexpression_stmt : COUT L_SHIFT QUOTES ID QUOTES SEMICOLON\n    | COUT L_SHIFT QUOTES ID QUOTES L_SHIFT ENDL SEMICOLON\n    | COUT L_SHIFT STRING  SEMICOLON\n    | COUT L_SHIFT STRING  L_SHIFT ENDL SEMICOLON\n    | COUT L_SHIFT var SEMICOLON\n    | COUT L_SHIFT var L_SHIFT   ENDL SEMICOLON\n    | COUT L_SHIFT var  L_SHIFT var SEMICOLON\n    | COUT L_SHIFT var L_SHIFT  var L_SHIFT ENDL SEMICOLON\n    expression_stmt : CIN R_SHIFT var SEMICOLON\n    | CIN R_SHIFT var  R_SHIFT var SEMICOLON\n    expression_stmt : ID PLUSPLUS\n    | PLUSPLUS ID\n    | ID MINUSMINUS\n    | MINUSMINUS ID\n    selection_stmt : IF LPAREN expression RPAREN statementselection_stmt : IF LPAREN expression RPAREN statement ELSE statementiteration_stmt : WHILE LPAREN expression RPAREN statementiteration_stmt :\n| FOR LPAREN var SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement\n| FOR LPAREN var SEMICOLON expression SEMICOLON expression RPAREN statement\n| FOR LPAREN var SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement\n| FOR LPAREN var SEMICOLON expression SEMICOLON PLUSPLUS var  RPAREN statement\n| FOR LPAREN var SEMICOLON expression SEMICOLON MINUSMINUS var  RPAREN statement\n    return_stmt : RETURN SEMICOLONreturn_stmt : RETURN expression SEMICOLONexpression : var EQUAL expressionexpression : simple_expressiondeclaration_list : declaration_list declarationdeclaration_list : declarationdeclaration : var_declaration\n    | HASH INCLUDE LESS_THAN ID GREATER_THAN\n    | fun_declaration\n    | USING NAMESPACE STD SEMICOLONvar : IDvar : ID LBRACKET expression RBRACKETsimple_expression : additive_expression relop additive_expressionsimple_expression : additive_expressionrelop : LESS_THAN\n        | LESS_OR_EQUAL\n        | GREATER_THAN\n        | GREATEREQUAL\n        | DEQUAL\n        | DISTINT\n        | QUOTES\n    additive_expression : additive_expression addop termadditive_expression : termaddop : PLUS\n    | MINUS\n    term : term mulop factorterm : factormulop : \tTIMES\n                | DIVIDE\n    factor : LPAREN expression RPARENfactor : varfactor : callfactor : NUMBERcall : ID LPAREN args RPARENargs : args_list\n            | empty\n    args_list : args_list COMMA expressionargs_list : expressionempty :'
    
_lr_action_items = {'HASH':([0,2,3,4,6,12,18,24,36,38,39,40,55,57,97,],[5,5,-58,-59,-61,-57,-2,-62,-60,-3,-4,-5,-6,-7,-18,]),'USING':([0,2,3,4,6,12,18,24,36,38,39,40,55,57,97,],[7,7,-58,-59,-61,-57,-2,-62,-60,-3,-4,-5,-6,-7,-18,]),'INT':([0,2,3,4,6,12,18,22,24,36,38,39,40,44,55,57,58,79,80,92,97,],[9,9,-58,-59,-61,-57,-2,9,-62,-60,-3,-4,-5,9,-6,-7,-91,9,-20,-19,-18,]),'VOID':([0,2,3,4,6,12,18,22,24,36,38,39,40,44,55,57,58,79,80,92,97,],[10,10,-58,-59,-61,-57,-2,33,-62,-60,-3,-4,-5,10,-6,-7,-91,10,-20,-19,-18,]),'STRING':([0,2,3,4,6,12,18,22,24,36,38,39,40,44,55,57,58,79,80,92,97,118,],[11,11,-58,-59,-61,-57,-2,11,-62,-60,-3,-4,-5,11,-6,-7,-91,11,-20,-19,-18,130,]),'$end':([1,2,3,4,6,12,18,24,36,38,39,40,55,57,97,],[0,-1,-58,-59,-61,-57,-2,-62,-60,-3,-4,-5,-6,-7,-18,]),'INCLUDE':([5,],[13,]),'NAMESPACE':([7,],[14,]),'ID':([8,9,10,11,16,18,19,20,30,33,37,38,39,40,52,55,58,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,80,91,92,93,94,96,97,98,99,100,101,102,103,105,109,110,114,117,118,119,120,121,122,123,124,125,126,127,129,136,139,140,141,142,143,144,145,146,152,153,156,157,159,160,161,162,163,166,169,170,171,172,175,178,179,180,181,182,183,184,185,186,],[15,-13,-14,-15,23,-2,25,28,42,-14,45,-3,-4,-5,45,-6,-91,45,45,45,45,-67,-68,-69,-70,-71,-72,-73,-76,-77,45,-80,-81,-91,-20,107,-19,-22,115,45,-18,-21,-23,-24,-25,-26,-27,-29,122,123,45,-28,25,-40,-42,25,-41,-43,45,45,25,-53,137,-54,-32,25,-34,25,-38,107,107,45,-44,-46,-30,-33,-36,-35,-39,107,45,-45,25,25,-31,-37,107,107,107,-49,107,107,-48,-50,-52,-51,]),'LESS_THAN':([13,45,47,49,50,51,53,54,61,87,88,89,90,95,107,167,],[16,-63,-83,65,-75,-79,-84,-85,-64,-83,-74,-78,-82,-86,-63,-83,]),'STD':([14,],[17,]),'SEMICOLON':([15,17,18,25,26,27,28,38,39,40,41,45,47,48,49,50,51,53,54,55,58,61,79,80,85,86,87,88,89,90,91,92,93,95,97,98,99,100,101,102,103,104,105,107,114,115,117,119,120,122,123,127,128,130,131,132,135,136,139,141,143,144,145,147,148,149,150,151,152,153,154,156,157,159,160,161,162,164,165,166,171,172,175,178,179,180,181,182,183,184,185,186,],[18,24,-2,-63,38,39,40,-3,-4,-5,55,-63,-83,-56,-66,-75,-79,-84,-85,-6,-91,-64,-91,-20,-55,-65,-83,-74,-78,-82,105,-19,-22,-86,-18,-21,-23,-24,-25,-26,-27,117,-29,-63,127,18,-28,-40,-42,-41,-43,-53,136,139,141,143,146,-54,-32,-34,-38,105,105,156,157,159,160,161,-44,-46,163,-30,-33,-36,-35,-39,105,171,172,-45,-31,-37,105,105,105,-49,105,105,-48,-50,-52,-51,]),'EQUAL':([15,45,47,61,107,115,167,],[19,-63,62,-64,-63,19,62,]),'COMMA':([15,22,32,34,35,42,45,47,48,49,50,51,53,54,59,61,78,82,84,85,86,87,88,89,90,95,115,116,],[20,-91,44,-11,-12,-16,-63,-83,-56,-66,-75,-79,-84,-85,-10,-64,-17,96,-90,-55,-65,-83,-74,-78,-82,-86,20,-89,]),'LBRACKET':([15,25,42,45,107,115,],[21,37,56,37,37,21,]),'LPAREN':([15,18,37,38,39,40,45,52,55,58,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,80,91,92,93,96,97,98,99,100,101,102,103,105,107,111,112,113,114,117,119,120,122,123,124,125,127,136,139,141,143,144,145,146,152,153,156,157,159,160,161,162,163,166,171,172,175,178,179,180,181,182,183,184,185,186,],[22,-2,52,-3,-4,-5,60,52,-6,-91,52,52,52,52,-67,-68,-69,-70,-71,-72,-73,-76,-77,52,-80,-81,-91,-20,52,-19,-22,52,-18,-21,-23,-24,-25,-26,-27,-29,60,124,125,126,52,-28,-40,-42,-41,-43,52,52,-53,-54,-32,-34,-38,52,52,52,-44,-46,-30,-33,-36,-35,-39,52,52,-45,-31,-37,52,52,52,-49,52,52,-48,-50,-52,-51,]),'RBLOCK':([18,38,39,40,55,58,79,80,91,92,93,97,98,99,100,101,102,103,105,117,119,120,122,123,127,136,139,141,143,144,145,152,153,156,157,159,160,161,162,166,171,172,175,178,179,180,181,182,183,184,185,186,],[-2,-3,-4,-5,-6,-91,-91,-20,97,-19,-22,-18,-21,-23,-24,-25,-26,-27,-29,-28,-40,-42,-41,-43,-53,-54,-32,-34,-38,-47,-47,-44,-46,-30,-33,-36,-35,-39,-47,-45,-31,-37,-47,-47,-47,-49,-47,-47,-48,-50,-52,-51,]),'COUT':([18,38,39,40,55,58,79,80,91,92,93,97,98,99,100,101,102,103,105,117,119,120,122,123,127,136,139,141,143,144,145,152,153,156,157,159,160,161,162,166,171,172,175,178,179,180,181,182,183,184,185,186,],[-2,-3,-4,-5,-6,-91,-91,-20,106,-19,-22,-18,-21,-23,-24,-25,-26,-27,-29,-28,-40,-42,-41,-43,-53,-54,-32,-34,-38,106,106,-44,-46,-30,-33,-36,-35,-39,106,-45,-31,-37,106,106,106,-49,106,106,-48,-50,-52,-51,]),'CIN':([18,38,39,40,55,58,79,80,91,92,93,97,98,99,100,101,102,103,105,117,119,120,122,123,127,136,139,141,143,144,145,152,153,156,157,159,160,161,162,166,171,172,175,178,179,180,181,182,183,184,185,186,],[-2,-3,-4,-5,-6,-91,-91,-20,108,-19,-22,-18,-21,-23,-24,-25,-26,-27,-29,-28,-40,-42,-41,-43,-53,-54,-32,-34,-38,108,108,-44,-46,-30,-33,-36,-35,-39,108,-45,-31,-37,108,108,108,-49,108,108,-48,-50,-52,-51,]),'PLUSPLUS':([18,38,39,40,45,55,58,61,79,80,91,92,93,97,98,99,100,101,102,103,105,107,117,119,120,122,123,127,136,139,141,143,144,145,152,153,156,157,159,160,161,162,163,166,167,171,172,175,178,179,180,181,182,183,184,185,186,],[-2,-3,-4,-5,-63,-6,-91,-64,-91,-20,109,-19,-22,-18,-21,-23,-24,-25,-26,-27,-29,119,-28,-40,-42,-41,-43,-53,-54,-32,-34,-38,109,109,-44,-46,-30,-33,-36,-35,-39,109,170,-45,174,-31,-37,109,109,109,-49,109,109,-48,-50,-52,-51,]),'MINUSMINUS':([18,38,39,40,45,55,58,61,79,80,91,92,93,97,98,99,100,101,102,103,105,107,117,119,120,122,123,127,136,139,141,143,144,145,152,153,156,157,159,160,161,162,163,166,167,171,172,175,178,179,180,181,182,183,184,185,186,],[-2,-3,-4,-5,-63,-6,-91,-64,-91,-20,110,-19,-22,-18,-21,-23,-24,-25,-26,-27,-29,120,-28,-40,-42,-41,-43,-53,-54,-32,-34,-38,110,110,-44,-46,-30,-33,-36,-35,-39,110,169,-45,173,-31,-37,110,110,110,-49,110,110,-48,-50,-52,-51,]),'LBLOCK':([18,38,39,40,43,55,58,79,80,91,92,93,97,98,99,100,101,102,103,105,117,119,120,122,123,127,136,139,141,143,144,145,152,153,156,157,159,160,161,162,166,171,172,175,178,179,180,181,182,183,184,185,186,],[-2,-3,-4,-5,58,-6,-91,-91,-20,58,-19,-22,-18,-21,-23,-24,-25,-26,-27,-29,-28,-40,-42,-41,-43,-53,-54,-32,-34,-38,58,58,-44,-46,-30,-33,-36,-35,-39,58,-45,-31,-37,58,58,58,-49,58,58,-48,-50,-52,-51,]),'IF':([18,38,39,40,55,58,79,80,91,92,93,97,98,99,100,101,102,103,105,117,119,120,122,123,127,136,139,141,143,144,145,152,153,156,157,159,160,161,162,166,171,172,175,178,179,180,181,182,183,184,185,186,],[-2,-3,-4,-5,-6,-91,-91,-20,111,-19,-22,-18,-21,-23,-24,-25,-26,-27,-29,-28,-40,-42,-41,-43,-53,-54,-32,-34,-38,111,111,-44,-46,-30,-33,-36,-35,-39,111,-45,-31,-37,111,111,111,-49,111,111,-48,-50,-52,-51,]),'WHILE':([18,38,39,40,55,58,79,80,91,92,93,97,98,99,100,101,102,103,105,117,119,120,122,123,127,136,139,141,143,144,145,152,153,156,157,159,160,161,162,166,171,172,175,178,179,180,181,182,183,184,185,186,],[-2,-3,-4,-5,-6,-91,-91,-20,112,-19,-22,-18,-21,-23,-24,-25,-26,-27,-29,-28,-40,-42,-41,-43,-53,-54,-32,-34,-38,112,112,-44,-46,-30,-33,-36,-35,-39,112,-45,-31,-37,112,112,112,-49,112,112,-48,-50,-52,-51,]),'FOR':([18,38,39,40,55,58,79,80,91,92,93,97,98,99,100,101,102,103,105,117,119,120,122,123,127,136,139,141,143,144,145,152,153,156,157,159,160,161,162,166,171,172,175,178,179,180,181,182,183,184,185,186,],[-2,-3,-4,-5,-6,-91,-91,-20,113,-19,-22,-18,-21,-23,-24,-25,-26,-27,-29,-28,-40,-42,-41,-43,-53,-54,-32,-34,-38,113,113,-44,-46,-30,-33,-36,-35,-39,113,-45,-31,-37,113,113,113,-49,113,113,-48,-50,-52,-51,]),'RETURN':([18,38,39,40,55,58,79,80,91,92,93,97,98,99,100,101,102,103,105,117,119,120,122,123,127,136,139,141,143,144,145,152,153,156,157,159,160,161,162,166,171,172,175,178,179,180,181,182,183,184,185,186,],[-2,-3,-4,-5,-6,-91,-91,-20,114,-19,-22,-18,-21,-23,-24,-25,-26,-27,-29,-28,-40,-42,-41,-43,-53,-54,-32,-34,-38,114,114,-44,-46,-30,-33,-36,-35,-39,114,-45,-31,-37,114,114,114,-49,114,114,-48,-50,-52,-51,]),'NUMBER':([18,19,21,37,38,39,40,52,55,58,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,80,91,92,93,96,97,98,99,100,101,102,103,105,114,117,119,120,122,123,124,125,127,136,139,141,143,144,145,146,152,153,156,157,159,160,161,162,163,166,171,172,175,178,179,180,181,182,183,184,185,186,],[-2,26,29,54,-3,-4,-5,54,-6,-91,54,54,54,54,-67,-68,-69,-70,-71,-72,-73,-76,-77,54,-80,-81,-91,-20,54,-19,-22,54,-18,-21,-23,-24,-25,-26,-27,-29,54,-28,-40,-42,-41,-43,54,54,-53,-54,-32,-34,-38,54,54,54,-44,-46,-30,-33,-36,-35,-39,54,54,-45,-31,-37,54,54,54,-49,54,54,-48,-50,-52,-51,]),'RPAREN':([22,25,31,32,33,34,35,42,45,47,48,49,50,51,53,54,59,60,61,77,78,81,82,83,84,85,86,87,88,89,90,95,116,133,134,167,168,173,174,176,177,],[-91,-63,43,-8,-9,-11,-12,-16,-63,-83,-56,-66,-75,-79,-84,-85,-10,-91,-64,90,-17,95,-87,-88,-90,-55,-65,-83,-74,-78,-82,-86,-89,144,145,-83,175,178,179,181,182,]),'GREATER_THAN':([23,45,47,49,50,51,53,54,61,87,88,89,90,95,107,167,],[36,-63,-83,67,-75,-79,-84,-85,-64,-83,-74,-78,-82,-86,-63,-83,]),'L_SHIFT':([25,61,106,130,131,147,149,],[-63,-64,118,138,140,155,158,]),'R_SHIFT':([25,61,108,132,],[-63,-64,121,142,]),'RBRACKET':([29,45,46,47,48,49,50,51,53,54,56,61,85,86,87,88,89,90,95,],[41,-63,61,-83,-56,-66,-75,-79,-84,-85,78,-64,-55,-65,-83,-74,-78,-82,-86,]),'TIMES':([45,47,50,51,53,54,61,87,88,89,90,95,107,167,],[-63,-83,75,-79,-84,-85,-64,-83,75,-78,-82,-86,-63,-83,]),'DIVIDE':([45,47,50,51,53,54,61,87,88,89,90,95,107,167,],[-63,-83,76,-79,-84,-85,-64,-83,76,-78,-82,-86,-63,-83,]),'LESS_OR_EQUAL':([45,47,49,50,51,53,54,61,87,88,89,90,95,107,167,],[-63,-83,66,-75,-79,-84,-85,-64,-83,-74,-78,-82,-86,-63,-83,]),'GREATEREQUAL':([45,47,49,50,51,53,54,61,87,88,89,90,95,107,167,],[-63,-83,68,-75,-79,-84,-85,-64,-83,-74,-78,-82,-86,-63,-83,]),'DEQUAL':([45,47,49,50,51,53,54,61,87,88,89,90,95,107,167,],[-63,-83,69,-75,-79,-84,-85,-64,-83,-74,-78,-82,-86,-63,-83,]),'DISTINT':([45,47,49,50,51,53,54,61,87,88,89,90,95,107,167,],[-63,-83,70,-75,-79,-84,-85,-64,-83,-74,-78,-82,-86,-63,-83,]),'QUOTES':([45,47,49,50,51,53,54,61,87,88,89,90,95,107,118,137,167,],[-63,-83,71,-75,-79,-84,-85,-64,-83,-74,-78,-82,-86,-63,129,147,-83,]),'PLUS':([45,47,49,50,51,53,54,61,86,87,88,89,90,95,107,167,],[-63,-83,72,-75,-79,-84,-85,-64,72,-83,-74,-78,-82,-86,-63,-83,]),'MINUS':([45,47,49,50,51,53,54,61,86,87,88,89,90,95,107,167,],[-63,-83,73,-75,-79,-84,-85,-64,73,-83,-74,-78,-82,-86,-63,-83,]),'ELSE':([97,99,100,101,102,103,105,117,119,120,122,123,127,136,139,141,143,144,145,152,153,156,157,159,160,161,162,166,171,172,175,178,179,180,181,182,183,184,185,186,],[-18,-23,-24,-25,-26,-27,-29,-28,-40,-42,-41,-43,-53,-54,-32,-34,-38,-47,-47,162,-46,-30,-33,-36,-35,-39,-47,-45,-31,-37,-47,-47,-47,-49,-47,-47,-48,-50,-52,-51,]),'ENDL':([138,140,155,158,],[148,150,164,165,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declaration_list':([0,],[2,]),'declaration':([0,2,],[3,12,]),'var_declaration':([0,2,79,],[4,4,92,]),'fun_declaration':([0,2,],[6,6,]),'type_specifier':([0,2,22,44,79,],[8,8,30,30,94,]),'var':([19,37,52,60,62,63,64,74,91,96,114,118,121,124,125,126,140,142,144,145,146,162,163,169,170,175,178,179,181,182,],[27,47,47,47,47,87,87,87,47,47,47,131,132,47,47,135,149,151,47,47,47,47,167,176,177,47,47,47,47,47,]),'params':([22,],[31,]),'param_list':([22,],[32,]),'param':([22,44,],[34,59,]),'empty':([22,58,60,79,],[35,80,83,93,]),'expression':([37,52,60,62,91,96,114,124,125,144,145,146,162,163,175,178,179,181,182,],[46,77,84,85,104,116,128,133,134,104,104,154,104,168,104,104,104,104,104,]),'simple_expression':([37,52,60,62,91,96,114,124,125,144,145,146,162,163,175,178,179,181,182,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'additive_expression':([37,52,60,62,63,91,96,114,124,125,144,145,146,162,163,175,178,179,181,182,],[49,49,49,49,86,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'term':([37,52,60,62,63,64,91,96,114,124,125,144,145,146,162,163,175,178,179,181,182,],[50,50,50,50,50,88,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'factor':([37,52,60,62,63,64,74,91,96,114,124,125,144,145,146,162,163,175,178,179,181,182,],[51,51,51,51,51,51,89,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'call':([37,52,60,62,63,64,74,91,96,114,124,125,144,145,146,162,163,175,178,179,181,182,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'compount_stmt':([43,91,144,145,162,175,178,179,181,182,],[57,100,100,100,100,100,100,100,100,100,]),'relop':([49,],[63,]),'addop':([49,86,],[64,64,]),'mulop':([50,88,],[74,74,]),'local_declarations':([58,],[79,]),'args':([60,],[81,]),'args_list':([60,],[82,]),'statement_list':([79,],[91,]),'statement':([91,144,145,162,175,178,179,181,182,],[98,152,153,166,180,183,184,185,186,]),'expression_stmt':([91,144,145,162,175,178,179,181,182,],[99,99,99,99,99,99,99,99,99,]),'selection_stmt':([91,144,145,162,175,178,179,181,182,],[101,101,101,101,101,101,101,101,101,]),'iteration_stmt':([91,144,145,162,175,178,179,181,182,],[102,102,102,102,102,102,102,102,102,]),'return_stmt':([91,144,145,162,175,178,179,181,182,],[103,103,103,103,103,103,103,103,103,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declaration_list','program',1,'p_program','analyzer.py',12),
  ('var_declaration -> type_specifier ID SEMICOLON','var_declaration',3,'p_var_declaration_1','analyzer.py',17),
  ('var_declaration -> type_specifier ID EQUAL NUMBER SEMICOLON','var_declaration',5,'p_var_declaration_1','analyzer.py',18),
  ('var_declaration -> type_specifier ID EQUAL var SEMICOLON','var_declaration',5,'p_var_declaration_1','analyzer.py',19),
  ('var_declaration -> type_specifier ID COMMA ID SEMICOLON','var_declaration',5,'p_var_declaration_1','analyzer.py',20),
  ('var_declaration -> type_specifier ID LBRACKET NUMBER RBRACKET SEMICOLON','var_declaration',6,'p_var_declaration_2','analyzer.py',26),
  ('fun_declaration -> type_specifier ID LPAREN params RPAREN compount_stmt','fun_declaration',6,'p_fun_declaration','analyzer.py',31),
  ('params -> param_list','params',1,'p_params_1','analyzer.py',36),
  ('params -> VOID','params',1,'p_params_2','analyzer.py',41),
  ('param_list -> param_list COMMA param','param_list',3,'p_param_list_1','analyzer.py',46),
  ('param_list -> param','param_list',1,'p_param_list_2','analyzer.py',51),
  ('param_list -> empty','param_list',1,'p_param_list_3','analyzer.py',56),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier_1','analyzer.py',61),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier_2','analyzer.py',66),
  ('type_specifier -> STRING','type_specifier',1,'p_type_specifier_','analyzer.py',71),
  ('param -> type_specifier ID','param',2,'p_param_1','analyzer.py',76),
  ('param -> type_specifier ID LBRACKET RBRACKET','param',4,'p_param_2','analyzer.py',81),
  ('compount_stmt -> LBLOCK local_declarations statement_list RBLOCK','compount_stmt',4,'p_compount_stmt','analyzer.py',86),
  ('local_declarations -> local_declarations var_declaration','local_declarations',2,'p_local_declarations_1','analyzer.py',91),
  ('local_declarations -> empty','local_declarations',1,'p_local_declarations_2','analyzer.py',96),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list_1','analyzer.py',101),
  ('statement_list -> empty','statement_list',1,'p_statement_list_2','analyzer.py',106),
  ('statement -> expression_stmt','statement',1,'p_statement','analyzer.py',111),
  ('statement -> compount_stmt','statement',1,'p_statement','analyzer.py',112),
  ('statement -> selection_stmt','statement',1,'p_statement','analyzer.py',113),
  ('statement -> iteration_stmt','statement',1,'p_statement','analyzer.py',114),
  ('statement -> return_stmt','statement',1,'p_statement','analyzer.py',115),
  ('expression_stmt -> expression SEMICOLON','expression_stmt',2,'p_expression_stmt_1','analyzer.py',121),
  ('expression_stmt -> SEMICOLON','expression_stmt',1,'p_expression_stmt_2','analyzer.py',126),
  ('expression_stmt -> COUT L_SHIFT QUOTES ID QUOTES SEMICOLON','expression_stmt',6,'p_expression_stmt_3','analyzer.py',131),
  ('expression_stmt -> COUT L_SHIFT QUOTES ID QUOTES L_SHIFT ENDL SEMICOLON','expression_stmt',8,'p_expression_stmt_3','analyzer.py',132),
  ('expression_stmt -> COUT L_SHIFT STRING SEMICOLON','expression_stmt',4,'p_expression_stmt_3','analyzer.py',133),
  ('expression_stmt -> COUT L_SHIFT STRING L_SHIFT ENDL SEMICOLON','expression_stmt',6,'p_expression_stmt_3','analyzer.py',134),
  ('expression_stmt -> COUT L_SHIFT var SEMICOLON','expression_stmt',4,'p_expression_stmt_3','analyzer.py',135),
  ('expression_stmt -> COUT L_SHIFT var L_SHIFT ENDL SEMICOLON','expression_stmt',6,'p_expression_stmt_3','analyzer.py',136),
  ('expression_stmt -> COUT L_SHIFT var L_SHIFT var SEMICOLON','expression_stmt',6,'p_expression_stmt_3','analyzer.py',137),
  ('expression_stmt -> COUT L_SHIFT var L_SHIFT var L_SHIFT ENDL SEMICOLON','expression_stmt',8,'p_expression_stmt_3','analyzer.py',138),
  ('expression_stmt -> CIN R_SHIFT var SEMICOLON','expression_stmt',4,'p_expression_stmt_4','analyzer.py',144),
  ('expression_stmt -> CIN R_SHIFT var R_SHIFT var SEMICOLON','expression_stmt',6,'p_expression_stmt_4','analyzer.py',145),
  ('expression_stmt -> ID PLUSPLUS','expression_stmt',2,'p_expression_stmt_5','analyzer.py',151),
  ('expression_stmt -> PLUSPLUS ID','expression_stmt',2,'p_expression_stmt_5','analyzer.py',152),
  ('expression_stmt -> ID MINUSMINUS','expression_stmt',2,'p_expression_stmt_5','analyzer.py',153),
  ('expression_stmt -> MINUSMINUS ID','expression_stmt',2,'p_expression_stmt_5','analyzer.py',154),
  ('selection_stmt -> IF LPAREN expression RPAREN statement','selection_stmt',5,'p_selection_stmt_1','analyzer.py',160),
  ('selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement','selection_stmt',7,'p_selection_stmt_2','analyzer.py',165),
  ('iteration_stmt -> WHILE LPAREN expression RPAREN statement','iteration_stmt',5,'p_iteration_stmt','analyzer.py',170),
  ('iteration_stmt -> <empty>','iteration_stmt',0,'p_iteration_stmt1','analyzer.py',175),
  ('iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON var MINUSMINUS RPAREN statement','iteration_stmt',10,'p_iteration_stmt1','analyzer.py',176),
  ('iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON expression RPAREN statement','iteration_stmt',9,'p_iteration_stmt1','analyzer.py',177),
  ('iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON var PLUSPLUS RPAREN statement','iteration_stmt',10,'p_iteration_stmt1','analyzer.py',178),
  ('iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON PLUSPLUS var RPAREN statement','iteration_stmt',10,'p_iteration_stmt1','analyzer.py',179),
  ('iteration_stmt -> FOR LPAREN var SEMICOLON expression SEMICOLON MINUSMINUS var RPAREN statement','iteration_stmt',10,'p_iteration_stmt1','analyzer.py',180),
  ('return_stmt -> RETURN SEMICOLON','return_stmt',2,'p_return_stmt_1','analyzer.py',186),
  ('return_stmt -> RETURN expression SEMICOLON','return_stmt',3,'p_return_stmt_2','analyzer.py',191),
  ('expression -> var EQUAL expression','expression',3,'p_expression_1','analyzer.py',196),
  ('expression -> simple_expression','expression',1,'p_expression_2','analyzer.py',201),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list_1','analyzer.py',206),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list_2','analyzer.py',211),
  ('declaration -> var_declaration','declaration',1,'p_declaration','analyzer.py',216),
  ('declaration -> HASH INCLUDE LESS_THAN ID GREATER_THAN','declaration',5,'p_declaration','analyzer.py',217),
  ('declaration -> fun_declaration','declaration',1,'p_declaration','analyzer.py',218),
  ('declaration -> USING NAMESPACE STD SEMICOLON','declaration',4,'p_declaration','analyzer.py',219),
  ('var -> ID','var',1,'p_var_1','analyzer.py',229),
  ('var -> ID LBRACKET expression RBRACKET','var',4,'p_var_2','analyzer.py',234),
  ('simple_expression -> additive_expression relop additive_expression','simple_expression',3,'p_simple_expression_1','analyzer.py',239),
  ('simple_expression -> additive_expression','simple_expression',1,'p_simple_expression_2','analyzer.py',244),
  ('relop -> LESS_THAN','relop',1,'p_relop','analyzer.py',249),
  ('relop -> LESS_OR_EQUAL','relop',1,'p_relop','analyzer.py',250),
  ('relop -> GREATER_THAN','relop',1,'p_relop','analyzer.py',251),
  ('relop -> GREATEREQUAL','relop',1,'p_relop','analyzer.py',252),
  ('relop -> DEQUAL','relop',1,'p_relop','analyzer.py',253),
  ('relop -> DISTINT','relop',1,'p_relop','analyzer.py',254),
  ('relop -> QUOTES','relop',1,'p_relop','analyzer.py',255),
  ('additive_expression -> additive_expression addop term','additive_expression',3,'p_additive_expression_1','analyzer.py',261),
  ('additive_expression -> term','additive_expression',1,'p_additive_expression_2','analyzer.py',266),
  ('addop -> PLUS','addop',1,'p_addop','analyzer.py',271),
  ('addop -> MINUS','addop',1,'p_addop','analyzer.py',272),
  ('term -> term mulop factor','term',3,'p_term_1','analyzer.py',278),
  ('term -> factor','term',1,'p_term_2','analyzer.py',283),
  ('mulop -> TIMES','mulop',1,'p_mulop','analyzer.py',288),
  ('mulop -> DIVIDE','mulop',1,'p_mulop','analyzer.py',289),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_1','analyzer.py',295),
  ('factor -> var','factor',1,'p_factor_2','analyzer.py',300),
  ('factor -> call','factor',1,'p_factor_3','analyzer.py',305),
  ('factor -> NUMBER','factor',1,'p_factor_4','analyzer.py',310),
  ('call -> ID LPAREN args RPAREN','call',4,'p_call','analyzer.py',315),
  ('args -> args_list','args',1,'p_args','analyzer.py',320),
  ('args -> empty','args',1,'p_args','analyzer.py',321),
  ('args_list -> args_list COMMA expression','args_list',3,'p_args_list_1','analyzer.py',327),
  ('args_list -> expression','args_list',1,'p_args_list_2','analyzer.py',332),
  ('empty -> <empty>','empty',0,'p_empty','analyzer.py',337),
]
